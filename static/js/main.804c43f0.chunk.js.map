{"version":3,"sources":["Task/Task.jsx","Redux/taskReducer.js","FormTask/FormTask.jsx","App.js","reportWebVitals.js","Redux/store.js","index.js"],"names":["Task","title","ADD_TASK","initialState","tasks","id","taskReducer","state","type","payload","task","LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","placeholder","name","component","connect","addTaskAction","App","this","map","className","Component","taskPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAUeA,EARF,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACX,OACI,6BACKA,K,kCCLPC,EAAW,WAEXC,EAAe,CACjBC,MAAO,CACF,CAACC,GAAI,EAAGJ,MAAO,QACf,CAACI,GAAI,EAAGJ,MAAO,WACf,CAACI,GAAI,EAAGJ,MAAO,aACf,CAACI,GAAI,EAAGJ,MAAO,SACf,CAACI,GAAI,EAAGJ,MAAO,WACf,CAACI,GAAI,EAAGJ,MAAO,YAoBTK,EAhBK,WAA0C,IAAzCC,EAAwC,uDAAhCJ,EAAgC,yCAAlBK,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,QAC5C,OAAOD,GACH,KAAKN,EACD,OAAO,2BACAK,GADP,IAEIH,MAAM,GAAD,mBAAMG,EAAMH,OAAZ,CAAmB,CAACC,GAAI,EAAGJ,MAAOQ,EAAQC,UAGvD,QACI,OAAOH,ICRbI,EAAiBC,YAAU,CAACC,KAAM,QAAjBD,EATP,SAACE,GACb,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,YAAa,WAAYC,KAAM,OAAQC,UAAW,UACzD,oDAcGC,cAAQ,GAAG,CAACC,cDIE,SAACb,GAAD,MAAc,CAACD,KAAMN,EAAUO,aCJ7CY,EAPE,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEf,OACI,cAACX,EAAD,CAAgBI,SAAUO,OCb5BC,E,4JACJ,WACE,IAAMb,EAAOc,KAAKV,MAAMV,MAAMqB,KAAI,SAAAf,GAAI,OAAI,cAAC,EAAD,eAAwBA,GAAbA,EAAKL,OAE1D,OACE,uBAAMqB,UAAW,gBAAjB,UACE,4CACA,cAAC,EAAD,IACA,6BACGhB,W,GATOiB,aAsBHN,eANS,SAACP,GACvB,MAAO,CACLV,MAAOU,EAAMc,SAASxB,SAIa,GAAxBiB,CAA4BE,GChB5BM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCFRQ,EAAWC,YAAgB,CACzBX,SAAUtB,EACVO,KAAM2B,MAIRC,EAAmBC,OAAOC,sCAAwCC,IAGzDC,EAFDC,YAAYR,EAAUG,EAAkBM,YAAgBC,OCJtEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BxB,K","file":"static/js/main.804c43f0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Task = ({title}) => {\r\n    return (\r\n        <li>\r\n            {title}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task;","const ADD_TASK = 'ADD_TASK';\r\n\r\nconst initialState = {\r\n    tasks: [\r\n         {id: 0, title: 'Leer'},\r\n         {id: 1, title: 'Dibujar'},\r\n         {id: 2, title: 'Programar'},\r\n         {id: 3, title: 'Comer'},\r\n         {id: 4, title: 'Caminar'},\r\n         {id: 5, title: 'Dormir'},\r\n    ]\r\n}\r\n\r\nconst taskReducer = (state = initialState,{type,payload}) => {\r\n    switch(type) {\r\n        case ADD_TASK: {\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, {id: 6, title: payload.task}]\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTaskAction = (payload) => ({type: ADD_TASK, payload})\r\n\r\nexport default taskReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {addTaskAction} from '../Redux/taskReducer';\r\n\r\nconst addTask = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={'New Task'} name={'task'} component={'input'} /> \r\n            <button>Add Task</button>\r\n        </form>\r\n    )    \r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'task'})(addTask);\r\n\r\nconst FormTask = ({addTaskAction}) => {\r\n\r\n    return (\r\n        <LoginReduxForm onSubmit={addTaskAction}/>\r\n    );\r\n}\r\n\r\nexport default connect('',{addTaskAction})(FormTask);","import './App.scss';\r\nimport React,{Component} from 'react';\r\nimport Task from './Task/Task';\r\nimport FormTask from './FormTask/FormTask';\r\nimport { connect } from 'react-redux';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const task = this.props.tasks.map(task => <Task key={task.id} {...task} />);\r\n\r\n    return (\r\n      <main className={'taskContainer'}>\r\n        <h1>TO DO LIST</h1>\r\n        <FormTask />\r\n        <ul>\r\n          {task}\r\n        </ul>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (props) => {\r\n  return {\r\n    tasks: props.taskPage.tasks\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware,compose} from \"redux\";\r\nimport taskReducer from './taskReducer';\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst reducers = combineReducers({\r\n        taskPage: taskReducer,\r\n        form: formReducer\r\n    }\r\n);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers( applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}